{"version":3,"sources":["config.js","App.js","reportWebVitals.js","nft.js","index.js"],"names":["NFTCONTRACT","STAKINGCONTRACT","moralisapi","nftpng","createAlchemyWeb3","account","contract","vaultcontract","web3","Web3Alc","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","chainId","web3Modal","Web3Modal","network","cacheProvider","App","state","balance","rawearn","this","setState","show","nftamount","outvalue","target","value","axios","get","then","outputa","data","console","log","config","headers","outputb","result","nftdata","sleep","milliseconds","Promise","resolve","setTimeout","delay","delayedLog","processArray","rwdArray","item","sum","reduce","a","b","formatsum","Number","toFixed","document","getElementById","textContent","connect","provider","toggleModal","newWeb3","Web3","eth","getAccounts","accounts","Contract","ABI","VAULTABI","methods","tokensOfOwner","call","getstakednfts","balanceOf","getbalance","arraynft","Array","from","map","tokenid","filter","forEach","id","earningInfo","array","earned","String","split","earnedrwd","utils","fromWei","rewardx","numrwd","push","setApprovalForAll","send","rawnfts","getMaxPriorityFeePerGas","tip","getBlock","block","baseFee","baseFeePerGas","maxPriority","maxFee","claim","maxFeePerGas","maxPriorityFeePerGas","unstake","_mintAmount","cost","mintRate","totalAmount","mint","currency","TOKENABI","approve","transfer","error","transactionHash","transactionReceipt","getTransactionReceipt","window","str","out","createElement","appendChild","createTextNode","mintpid","className","class","style","fontFamily","fontWeight","fontSize","href","src","width","type","onClick","color","textShadow","for","ButtonGroup","size","name","borderColor","backgroundColor","boxShadow","handleNFT","Button","border","borderRadius","marginTop","scope","location","reload","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","moralisapikey","binancechainwallet","infuraId","walletlink","WalletLink","appName","appLogoUrl","darkMode","theme","NFT","useState","apicall","getNfts","nftstk","getStk","loadingState","setLoadingState","output","nfts","all","i","tokenId","token_id","holder","owner_of","wallet","stakednfts","stkid","useEffect","callApi","length","display","gridTemplateColumns","columnGap","nft","toLowerCase","indexOf","stakeit","stake","alt","marginLeft","position","top","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.639e2e71.chunk.js","sourcesContent":["import { createAlchemyWeb3 } from '@alch/alchemy-web3';\r\nexport const NFTCONTRACT = \"0xfA3Bcfe820dF123f13650d34bCc5ab1Ad2213FBC\";\r\nexport const STAKINGCONTRACT = \"0xC76CCdD0Fc0393B135BeBa8e1f7e8515bA842c29\";\r\nexport const polygonscanapi = \"https://api.polygonscan.com/api\";\r\nexport const moralisapi = \"https://deep-index.moralis.io/api/v2/\";\r\nexport const nftpng = \"https://ipfs.io/ipfs/QmavM8Zpo9bD3r4zEnhbbBLLvHyfr1YL7f1faG3ovaeSSG/\";\r\nexport const Web3Alc = createAlchemyWeb3(\"https://polygon-mainnet.g.alchemy.com/v2/LLAbWRfbb6CllzU_vTOBUsY57jnJvR2O\");","import './App.css';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { Component } from 'react';\r\nimport 'sf-font';\r\nimport axios from 'axios';\r\nimport ABI from './ABI.json';\r\nimport VAULTABI from './VAULTABI.json';\r\nimport TOKENABI from './TOKENABI.json';\r\nimport { NFTCONTRACT, STAKINGCONTRACT, polygonscanapi, moralisapi, nftpng } from './config';\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport WalletLink from \"walletlink\";\r\nimport Web3 from 'web3';\r\nimport { createAlchemyWeb3 } from '@alch/alchemy-web3';\r\n\r\nvar account = null;\r\nvar contract = null;\r\nvar vaultcontract = null;\r\nvar web3 = null;\r\n\r\nconst Web3Alc = createAlchemyWeb3(\"https://polygon-mainnet.g.alchemy.com/v2/LLAbWRfbb6CllzU_vTOBUsY57jnJvR2O\");\r\n\r\nconst moralisapikey = \"bnDWGiOwJ2upZ049C7Ynvz42EGCYVZFd235eSF8kAdACLvZsxvbAVxduOdkmtuGr\";\r\nconst polygonscanapikey = \"TQ51EPW2DIYTDS664A7CVG74CYERHQ2IQ4\";\r\n\r\n\r\n\r\nconst providerOptions = {\r\n\t\r\n\t walletconnect: {\r\n      package: WalletConnectProvider,\r\n      options: {\r\n        rpc: {\r\n          137: 'https://polygon-rpc.com'\r\n        },\r\n        chainId: 137\r\n      }\r\n    },\r\n\t\r\n\t\r\n};\r\n\r\n\r\n\r\n\r\nconst web3Modal = new Web3Modal({\r\n  network: \"mainnet\", // optional\r\n  cacheProvider: true, // optional\r\n  providerOptions // required\r\n});\r\n\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tbalance: [],\r\n\t\t\trawearn: [],\r\n\t\t};\r\n\t}\r\n  \r\n\thandleModal(){  \r\n\t\tthis.setState({show:!this.state.show})  \r\n\t} \r\n\r\n\thandleNFT(nftamount) {\r\n\t\tthis.setState({outvalue:nftamount.target.value});\r\n  \t}\r\n\r\n\tasync componentDidMount() {\r\n\t\t\r\n\t\tawait axios.get((polygonscanapi + `?module=stats&action=tokensupply&contractaddress=${NFTCONTRACT}&apikey=${polygonscanapikey}`))\r\n\t\t.then(outputa => {\r\n            this.setState({\r\n                balance:outputa.data\r\n            })\r\n            console.log(outputa.data)\r\n        })\r\n\t\tlet config = {'X-API-Key': moralisapikey, 'accept': 'application/json'};\r\n\t\tawait axios.get((moralisapi + `/nft/${NFTCONTRACT}/owners?chain=polygon&format=decimal`), {headers: config})\r\n    \r\n\t\t.then(outputb => {\r\n\t\t\tconst { result } = outputb.data\r\n            this.setState({\r\n                nftdata:result\r\n            })\r\n            console.log(outputb.data)\r\n        })\r\n\t}\r\n\r\n\r\nrender() {\r\n\tconst {balance} = this.state;\r\n\tconst {outvalue} = this.state;\r\n  \r\n\r\n  const sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n  }\r\n\r\n  const expectedBlockTime = 10000;\r\n\r\n  async function connectwallet() {\r\n    var provider = await web3Modal.connect();\r\n    await web3Modal.toggleModal();\r\n    const newWeb3 = new Web3(provider);\r\n    const accounts = await newWeb3.eth.getAccounts();\r\n    account = accounts[0];\r\n    console.log(accounts);\r\n    document.getElementById('wallet-address').textContent = account;\r\n    contract = new newWeb3.eth.Contract(ABI, NFTCONTRACT);\r\n    vaultcontract = new newWeb3.eth.Contract(VAULTABI, STAKINGCONTRACT);\r\n    var getstakednfts = await vaultcontract.methods.tokensOfOwner(account).call();\r\n    document.getElementById('yournfts').textContent = getstakednfts;\r\n    var getbalance = Number(await vaultcontract.methods.balanceOf(account).call());\r\n    document.getElementById('stakedbalance').textContent = getbalance;\r\n    const arraynft = Array.from(getstakednfts.map(Number));\r\n\t\tconst tokenid = arraynft.filter(Number);\r\n\t\tvar rwdArray = [];\r\n    tokenid.forEach(async (id) => {\r\n      var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\r\n      var array = Array.from(rawearn.map(Number));\r\n      console.log(array);\r\n      array.forEach(async (item) => {\r\n        var earned = String(item).split(\",\")[0];\r\n        var earnedrwd = Web3.utils.fromWei(earned);\r\n        var rewardx = Number(earnedrwd).toFixed(2);\r\n        var numrwd = Number(rewardx);\r\n        console.log(numrwd);\r\n        rwdArray.push(numrwd);\r\n      });\r\n    });\r\n    function delay() {\r\n      return new Promise(resolve => setTimeout(resolve, 300));\r\n    }\r\n    async function delayedLog(item) {\r\n      await delay();\r\n      var sum = item.reduce((a, b) => a + b, 0);\r\n      var formatsum = Number(sum).toFixed(2);\r\n      document.getElementById('earned').textContent = formatsum;\r\n    }\r\n    async function processArray(rwdArray) {\r\n      for (const item of rwdArray) {\r\n        await delayedLog(item);\r\n      }\r\n    }\r\n    return processArray([rwdArray]);\r\n  }\r\n\r\n  async function verify() {\r\n    var getstakednfts = await vaultcontract.methods.tokensOfOwner(account).call();\r\n    document.getElementById('yournfts').textContent = getstakednfts;\r\n    var getbalance = Number(await vaultcontract.methods.balanceOf(account).call());\r\n    document.getElementById('stakedbalance').textContent = getbalance;\r\n  }\r\n\r\n  async function enable() {\r\n    contract.methods.setApprovalForAll(STAKINGCONTRACT, true).send({ from: account });\r\n  }\r\n  async function rewardinfo() {\r\n    var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\r\n    const arraynft = Array.from(rawnfts.map(Number));\r\n    const tokenid = arraynft.filter(Number);\r\n    var rwdArray = [];\r\n    tokenid.forEach(async (id) => {\r\n      var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\r\n      var array = Array.from(rawearn.map(Number));\r\n      array.forEach(async (item) => {\r\n        var earned = String(item).split(\",\")[0];\r\n        var earnedrwd = Web3.utils.fromWei(earned);\r\n        var rewardx = Number(earnedrwd).toFixed(2);\r\n        var numrwd = Number(rewardx);\r\n        rwdArray.push(numrwd)\r\n      });\r\n    });\r\n    function delay() {\r\n      return new Promise(resolve => setTimeout(resolve, 300));\r\n    }\r\n    async function delayedLog(item) {\r\n      await delay();\r\n      var sum = item.reduce((a, b) => a + b, 0);\r\n      var formatsum = Number(sum).toFixed(2);\r\n      document.getElementById('earned').textContent = formatsum;\r\n    }\r\n    async function processArray(rwdArray) {\r\n      for (const item of rwdArray) {\r\n        await delayedLog(item);\r\n      }\r\n    }\r\n    return processArray([rwdArray]);\r\n  }\r\n  async function claimit() {\r\n    var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\r\n    const arraynft = Array.from(rawnfts.map(Number));\r\n    const tokenid = arraynft.filter(Number);\r\n    await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\r\n      Web3Alc.eth.getBlock('pending').then((block) => {\r\n        var baseFee = Number(block.baseFeePerGas);\r\n        var maxPriority = Number(tip);\r\n        var maxFee = maxPriority + baseFee;\r\n        tokenid.forEach(async (id) => {\r\n          await vaultcontract.methods.claim([id])\r\n            .send({\r\n              from: account,\r\n              maxFeePerGas: maxFee,\r\n              maxPriorityFeePerGas: maxPriority\r\n            })\r\n        })\r\n      });\r\n    })\r\n  }\r\n  async function unstakeall() {\r\n    var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\r\n    const arraynft = Array.from(rawnfts.map(Number));\r\n    const tokenid = arraynft.filter(Number);\r\n    await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\r\n      Web3Alc.eth.getBlock('pending').then((block) => {\r\n        var baseFee = Number(block.baseFeePerGas);\r\n        var maxPriority = Number(tip);\r\n        var maxFee = maxPriority + baseFee;\r\n        tokenid.forEach(async (id) => {\r\n          await vaultcontract.methods.unstake([id])\r\n            .send({\r\n              from: account,\r\n              maxFeePerGas: maxFee,\r\n              maxPriorityFeePerGas: maxPriority\r\n            })\r\n        })\r\n      });\r\n    })\r\n  }\r\n  async function mintnative() {\r\n    var _mintAmount = Number(outvalue);\r\n    var mintRate = Number(await contract.methods.cost().call());\r\n    var totalAmount = mintRate * _mintAmount;\r\n    await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\r\n        Web3Alc.eth.getBlock('pending').then((block) => {\r\n            var baseFee = Number(block.baseFeePerGas);\r\n            var maxPriority = Number(tip);\r\n            var maxFee = baseFee + maxPriority\r\n        contract.methods.mint(account, _mintAmount)\r\n            .send({ from: account,\r\n              value: String(totalAmount),\r\n              maxFeePerGas: maxFee,\r\n              maxPriorityFeePerGas: maxPriority});\r\n        });\r\n    })\r\n  }\r\n\r\n  async function mint0() {\r\n    var _pid = \"0\";\r\n    var currency = new web3.eth.Contract(TOKENABI, \"0x013e90C6ea4ea50625C3Ff1288DbD154f8c2479b\");\r\n    var mintRate = 999 * 10 ** 18;\r\n    var _mintAmount = Number(outvalue);\r\n    var totalAmount = mintRate * _mintAmount;\r\n    await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\r\n      Web3Alc.eth.getBlock('pending').then((block) => {\r\n        var baseFee = Number(block.baseFeePerGas);\r\n        var maxPriority = Number(tip);\r\n        var maxFee = maxPriority + baseFee;\r\n        currency.methods.approve(NFTCONTRACT, String(totalAmount))\r\n\t\t\t\t\t  .send({\r\n\t\t\t\t\t\t  from: account})\r\n              .then(currency.methods.transfer(NFTCONTRACT, String(totalAmount))\r\n\t\t\t\t\t\t  .send({\r\n\t\t\t\t\t\t\t  from: account,\r\n\t\t\t\t\t\t\t  maxFeePerGas: maxFee,\r\n\t\t\t\t\t\t\t  maxPriorityFeePerGas: maxPriority\r\n\t\t\t\t\t\t  },\r\n              async function (error, transactionHash) {\r\n                console.log(\"Transfer Submitted, Hash: \", transactionHash)\r\n                let transactionReceipt = null\r\n                while (transactionReceipt == null) {\r\n                  transactionReceipt = await web3.eth.getTransactionReceipt(transactionHash);\r\n                  await sleep(expectedBlockTime)\r\n                }\r\n                window.console = {\r\n                  log: function (str) {\r\n                    var out = document.createElement(\"div\");\r\n                    out.appendChild(document.createTextNode(str));\r\n                    document.getElementById(\"txout\").appendChild(out);\r\n                  }\r\n                }\r\n                console.log(\"Transfer Complete\", transactionReceipt);\r\n                contract.methods.mintpid(account, _mintAmount, _pid)\r\n                .send({\r\n                  from: account,\r\n                  maxFeePerGas: maxFee,\r\n                  maxPriorityFeePerGas: maxPriority\r\n                });\r\n            }));\r\n    });\r\n  });\r\n}\r\nconst refreshPage = ()=>{\r\n  window.location.reload();  \r\n}\r\n\r\n  return (\r\n    <div className=\"App nftapp\">\r\n        <nav class=\"navbar navbarfont navbarglow navbar-expand-md navbar-dark bg-dark mb-4\">\r\n          <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\r\n            <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '25px' }} href=\"#\"></a><img src=\"n2d-logo.png\" width=\"10%\" />\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n              <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"25px\" }}>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"#\">List NFTs</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\">Bridge NFTs</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className='px-5'>\r\n            <input id=\"connectbtn\" type=\"button\" className=\"connectbutton\" onClick={connectwallet} style={{ fontFamily: \"SF Pro Display\" }} value=\"Connect Your Wallet\" />\r\n          </div>\r\n        </nav>\r\n        <div className='container container-style'>\r\n          <div className='col'>\r\n            <body className='nftminter'>\r\n          <form>\r\n            <div className=\"row pt-3\">\r\n              <div>\r\n                <h1 className=\"pt-2\" style={{ fontWeight: \"30\" }}>NFT Minter</h1>\r\n              </div>\r\n              <h3>{balance.result}/5000</h3>\r\n              <h6>Your Wallet Address</h6>\r\n              <div className=\"pb-3\" id='wallet-address' style={{\r\n                color: \"#39FF14\",\r\n                fontWeight: \"400\",\r\n                textShadow: \"1px 1px 1px black\",\r\n              }}>\r\n                <label for=\"floatingInput\">Please Connect Wallet</label>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label style={{ fontWeight: \"300\", fontSize: \"18px\" }}>Select NFT Quantity</label>\r\n            </div>\r\n            <ButtonGroup size=\"lg\"\r\n              aria-label=\"First group\"\r\n              name=\"amount\"\r\n              style={{ borderColor:\"#ffcf40\" ,backgroundColor:\"#ffcf40\" ,boxShadow: \"1px 1px 5px #ffcf40\"}}\r\n              onClick={nftamount => this.handleNFT(nftamount, \"value\")}\r\n            >\r\n              <Button style={{borderColor:\"#ffcf40\"}} value=\"1\">1</Button>\r\n              <Button style={{borderColor:\"#ffcf40\"}} value=\"2\">2</Button>\r\n              <Button style={{borderColor:\"#ffcf40\"}} value=\"3\">3</Button>\r\n              <Button style={{borderColor:\"#ffcf40\"}} value=\"4\">4</Button>\r\n              <Button style={{borderColor:\"#ffcf40\"}} value=\"5\">5</Button>\r\n            </ButtonGroup>\r\n            <h6 className=\"pt-2\" style={{ fontFamily: \"SF Pro Display\", fontWeight: \"300\", fontSize: \"18px\" }}>Buy with your preferred crypto!</h6>\r\n            <div className=\"row px-2 pb-2 row-style\">\r\n              <div className='col'>\r\n\r\n              </div>\r\n              <div className=\"col \">\r\n                <Button className=\"button-style\" onClick={mint0} style={{ border: \"0.2px\", borderRadius: \"14px\", boxShadow: \"1px 1px 5px #000000\" }}>\r\n                  <img src={\"n2dr-logo.png\"} width=\"90%\" />\r\n                </Button>\r\n              </div>\r\n              <div style={{borderColor:\"#ffcf40\"}} className=\"col\">\r\n                <Button style={{borderColor:\"#ffcf40\"}} className=\"button-style\" onClick={mintnative} style={{ border: \"0.2px\", borderRadius: \"14px\", boxShadow: \"1px 1px 5px #000000\" }}>\r\n                  <img src=\"matic.png\" width=\"90%\" />\r\n                </Button>\r\n              </div>\r\n              <div className='col'>\r\n                \r\n              </div>\r\n              <div>\r\n                <label id='txout' style={{ color: \"#39FF14\", marginTop: \"5px\", fontSize: '20px', fontWeight: '500', textShadow: \"1px 1px 2px #000000\" }}>\r\n                  <p style={{ fontSize: \"20px\" }}>Transfer Status</p>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          </body>\r\n          </div>\r\n        <div className='col'>\r\n          <body className='nftstaker border-0'>\r\n            <form  style={{ fontFamily: \"SF Pro Display\" }} >\r\n              <h2 style={{ borderRadius: '14px', fontWeight: \"300\", fontSize: \"25px\" }}>Intero NFT Staking Vault </h2>\r\n              <h6 style={{ fontWeight: \"300\" }}>First time staking?</h6>\r\n              <Button className=\"btn\" onClick={enable} style={{ borderColor:\"#ffcf40\" ,backgroundColor: \"#ffffff10\", boxShadow: \"1px 1px 5px #ffcf40\" }} >Authorize Your Wallet</Button>\r\n              <div className=\"row px-3\">\r\n                <div className=\"col\">\r\n                  <form class=\"stakingrewards\" style={{ borderRadius: \"25px\", boxShadow: \"1px 1px 15px #ffffff\" }}>\r\n                    <h5 style={{ color: \"#FFFFFF\", fontWeight: '300' }}>Your Vault Activity</h5>\r\n                    <h6 style={{ color: \"#FFFFFF\" }}>Verify Staked Amount</h6>\r\n                    <Button onClick={verify} style={{ borderColor:\"#ffcf40\" ,backgroundColor: \"#ffffff10\", boxShadow: \"1px 1px 5px #ffcf40\" }} >Verify</Button>\r\n                    <table className='table mt-3 mb-5 px-3 table-dark'>\r\n                      <tr>\r\n                        <td style={{ fontSize: \"19px\" }}>Your Staked NFTs:\r\n                          <span style={{ backgroundColor: \"#ffffff00\", fontSize: \"21px\", color: \"#39FF14\", fontWeight: \"500\", textShadow: \"1px 1px 2px #000000\" }} id='yournfts'></span>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ fontSize: \"19px\" }}>Total Staked NFTs:\r\n                          <span style={{ backgroundColor: \"#ffffff00\", fontSize: \"21px\", color: \"#39FF14\", fontWeight: \"500\", textShadow: \"1px 1px 2px #000000\" }} id='stakedbalance'></span>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ fontSize: \"19px\" }}>Unstake All Staked NFTs\r\n                          <Button onClick={unstakeall} className='mb-3' style={{borderColor:\"#ffcf40\" , backgroundColor: \"#ffffff10\", boxShadow: \"1px 1px 5px #000000\" }}>Unstake All</Button>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </form>\r\n                  </div>\r\n                  <img className=\"col-lg-4\" src=\"art.png\"/>\r\n                  <div className=\"col\">\r\n                    <form className='stakingrewards' style={{ borderRadius: \"25px\", boxShadow: \"1px 1px 15px #ffffff\", fontFamily: \"SF Pro Display\" }}>\r\n                      <h5 style={{ color: \"#FFFFFF\", fontWeight: '300' }}> Staking Rewards</h5>\r\n                      <Button onClick={rewardinfo} style={{borderColor:\"#ffcf40\" , backgroundColor: \"#ffffff10\", boxShadow: \"1px 1px 5px #000000\" }} >Earned IWT Rewards</Button>\r\n                      <div id='earned' style={{ color: \"#39FF14\", marginTop: \"5px\", fontSize: '25px', fontWeight: '500', textShadow: \"1px 1px 2px #000000\" }}><p style={{ fontSize: \"20px\" }}>Earned Tokens</p></div>\r\n                      <div className='col-12 mt-2'>\r\n                        <div style={{ color: 'white' }}>Claim Rewards</div>\r\n                        <Button onClick={claimit} style={{ borderColor:\"#ffcf40\" ,backgroundColor: \"#ffffff10\", boxShadow: \"1px 1px 5px #000000\" }} className=\"mb-2\">Claim</Button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row px-4 pt-2\">\r\n                  <div class=\"header\">\r\n                    <div style={{ fontSize: '25px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Intero NFT Staking Pool Active Rewards</div>\r\n                    <table className='table px-3 table-bordered table-dark'>\r\n                      <thead className='thead-light'>\r\n                        <tr>\r\n                          <th scope=\"col\">Collection</th>\r\n                          <th scope=\"col\">Rewards Per Day</th>\r\n                          <th scope=\"col\">Exchangeable Items</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>Intero Bronze Collection</td>\r\n                          <td class=\"amount\" data-test-id=\"rewards-summary-ads\">\r\n                            <span class=\"amount\">0.50</span>&nbsp;<span class=\"currency\">Intero</span>\r\n                          </td>\r\n                          <td class=\"exchange\">\r\n                            <span class=\"amount\">2</span>&nbsp;<span class=\"currency\">NFTs/M</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Intero Silver Collection</td>\r\n                          <td class=\"amount\" data-test-id=\"rewards-summary-ac\">\r\n                            <span class=\"amount\">2.50</span>&nbsp;<span class=\"currency\">Intero</span>\r\n                          </td>\r\n                          <td class=\"exchange\"><span class=\"amount\">10</span>&nbsp;<span class=\"currency\">NFTs/M</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr className='stakegoldeffect'>\r\n                          <td>Intero Gold Collection</td>\r\n                          <td class=\"amount\" data-test-id=\"rewards-summary-one-time\"><span class=\"amount\">1</span>&nbsp;<span class=\"currency\">IWT+</span>\r\n                          </td>\r\n                          <td class=\"exchange\">\r\n                            <span class=\"amount\">25 NFTs/M or </span>\r\n                            <span class=\"currency\">100 IWT/M</span>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n\r\n                    <div class=\"header\">\r\n                      <div style={{ fontSize: '25px', borderRadius: '14px', fontWeight: '300' }}>intero Token Stake Farms</div>\r\n                      <table className='table table-bordered table-dark' style={{ borderRadius: '14px' }} >\r\n                        <thead className='thead-light'>\r\n                          <tr>\r\n                            <th scope=\"col\">Farm Pools</th>\r\n                            <th scope=\"col\">Harvest Daily Earnings</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr>\r\n                            <td>Stake Intero to Earn IWT</td>\r\n                            <td class=\"amount\" data-test-id=\"rewards-summary-ads\">\r\n                              <span class=\"amount\">0.01</span>&nbsp;<span class=\"currency\">Per IWT</span>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>Stake Intero to Earn IWT+</td>\r\n                            <td class=\"amount\" data-test-id=\"rewards-summary-ac\">\r\n                              <span class=\"amount\">0.005</span>&nbsp;<span class=\"currency\">Per IWT</span>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </form>\r\n          </body>\r\n        </div>\r\n      </div>\r\n      <div className='row nftportal mt-3'>\r\n        <div className='col mt-4 ml-3'>\r\n        <img src=\"n2dr-logo.png\" width={'20%'}></img>\r\n      </div>\r\n      <div className='col'>\r\n        <h1 className='n2dtitlestyle mt-3'>Your NFT Portal</h1>\r\n      <Button onClick={refreshPage} style={{ borderColor:\"#ffcf40\" , backgroundColor: \"#000000\", boxShadow: \"1px 1px 5px #000000\" }}>Refresh NFT Portal</Button>\r\n      </div>\r\n      <div className='col mt-3 mr-5'>\r\n        <img src=\"polygon.png\" width={'60%'}></img>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './App.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react'\r\nimport 'sf-font';\r\nimport axios from 'axios';\r\nimport VAULTABI from './VAULTABI.json';\r\nimport { NFTCONTRACT, STAKINGCONTRACT, moralisapi, nftpng } from './config';\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport WalletLink from \"walletlink\";\r\nimport Web3 from 'web3';\r\n\r\nvar web3 = null;\r\nvar account = null;\r\nvar vaultcontract = null;\r\n\r\nconst moralisapikey = \"bnDWGiOwJ2upZ049C7Ynvz42EGCYVZFd235eSF8kAdACLvZsxvbAVxduOdkmtuGr\";\r\nconst providerOptions = {\r\n\tbinancechainwallet: {\r\n\t\tpackage: true\r\n\t  },\r\n\t  walletconnect: {\r\n\t\tpackage: WalletConnectProvider,\r\n\t\toptions: {\r\n\t\t  infuraId: \"3cf2d8833a2143b795b7796087fff369\"\r\n\t\t}\r\n\t},\r\n\twalletlink: {\r\n\t\tpackage: WalletLink, \r\n\t\toptions: {\r\n\t\t  appName: \"Net2Dev NFT Minter\", \r\n\t\t  infuraId: \"3cf2d8833a2143b795b7796087fff369\",\r\n\t\t  rpc: \"\", \r\n\t\t  chainId: 4, \r\n\t\t  appLogoUrl: null, \r\n\t\t  darkMode: true \r\n\t\t}\r\n\t  },\r\n};\r\n\r\nconst web3Modal = new Web3Modal({\r\n\tnetwork: \"rinkeby\",\r\n\ttheme: \"dark\",\r\n\tcacheProvider: true,\r\n\tproviderOptions \r\n  });\r\n\r\nexport default function NFT() {\r\n  const [apicall, getNfts] = useState([])\r\n  const [nftstk, getStk] = useState([])\r\n  const [loadingState, setLoadingState] = useState('not-loaded')\r\n\r\n  useEffect(() => {\r\n    callApi()\r\n  }, [])\r\n\r\n  async function callApi() {\r\n    var provider = await web3Modal.connect();\r\n    web3 = new Web3(provider);\r\n    await provider.send('eth_requestAccounts');\r\n    var accounts = await web3.eth.getAccounts();\r\n    account = accounts[0];\r\n    vaultcontract = new web3.eth.Contract(VAULTABI, STAKINGCONTRACT);\r\n\t\tlet config = {'X-API-Key': moralisapikey, 'accept': 'application/json'};\r\n\t\tconst nfts = await axios.get((moralisapi + '/nft/${NFTCONTRACT}/owners?chain=polygon&format=decimal'), {headers: config})\r\n    .then(output => {\r\n        const { result } = output.data\r\n        return result;\r\n      })\r\n    const apicall = await Promise.all(nfts.map(async i => {\r\n      let item = {\r\n        tokenId: i.token_id,\r\n        holder: i.owner_of,\r\n        wallet: account,\r\n      }\r\n      return item\r\n    }))\r\n    const stakednfts = await vaultcontract.methods.tokensOfOwner(account).call()\r\n    .then(id => {\r\n      return id;\r\n    })\r\n    const nftstk = await Promise.all(stakednfts.map(async i => {\r\n      let stkid = {\r\n        tokenId: i,\r\n      }\r\n      return stkid\r\n    }))\r\n      getNfts(apicall)\r\n      getStk(nftstk)\r\n      console.log(apicall);\r\n      setLoadingState('loaded')\r\n    } \r\n    if (loadingState === 'loaded' && !apicall.length) \r\n    return (\r\n          <h1 className=\"text-3xl\">Wallet Not Connected</h1>)\r\n    return (\r\n        <div className='nftportal mb-4'>\r\n            <div className=\"container col-lg-11\">\r\n              <div className=\"row items px-3 pt-3\">\r\n                <div className=\"ml-3 mr-3\" style={{ display: \"inline-grid\", gridTemplateColumns: \"repeat(4, 5fr)\", columnGap: \"20px\" }}>\r\n                  {apicall.map((nft, i) => {\r\n                    var owner = nft.wallet.toLowerCase();\r\n                      if (owner.indexOf(nft.holder) !== -1) {\r\n                    async function stakeit() {\r\n                      vaultcontract.methods.stake([nft.tokenId]).send({ from: account });\r\n                    }\r\n                    return (\r\n                      <div className=\"card nft-card mt-3 mb-3\" key={i} >\r\n                        <div className=\"image-over\">\r\n                          <img className=\"card-img-top\" src={nftpng + nft.tokenId + '.png'} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"card-caption col-12 p-0\">\r\n                          <div className=\"card-body\">\r\n                            <h5 className=\"mb-0\">Intero Collection NFT #{nft.tokenId}</h5>\r\n                            <h5 className=\"mb-0 mt-2\">Status<p style={{ color: \"#39FF14\", fontWeight: \"bold\", textShadow: \"1px 1px 2px #000000\" }}>Ready to Stake</p></h5>\r\n                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                              <input key={i} type=\"hidden\" id='stakeid' value={nft.tokenId} />\r\n                              <Button style={{ marginLeft: '2px', backgroundColor: \"#ffffff10\" }} onClick={stakeit}>Stake it</Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}})}\r\n                    {nftstk.map((nft, i) => {\r\n                      async function unstakeit() {\r\n                        vaultcontract.methods.unstake([nft.tokenId]).send({ from: account });\r\n                      }\r\n                      return (\r\n                        <div>\r\n                        \r\n                        <div className=\"card stakedcard mt-3 mb-3\" key={i} >\r\n                          <div className=\"image-over\">\r\n                          <img style={{position:'absolute',top:'0.05rem',width:'90px'}} src='stakeicon.png'></img>\r\n                            <img className=\"card-img-top\" src={nftpng + nft.tokenId + '.png'} alt=\"\" />\r\n                          </div>\r\n                          <div className=\"card-caption col-12 p-0\">\r\n                            <div className=\"card-body\">\r\n                              <h5 className=\"mb-0\">Net2Dev Collection NFT #{nft.tokenId}</h5>\r\n                              <h5 className=\"mb-0 mt-2\">Status<p style={{ color: \"#15F4EE\", fontWeight: \"bold\", textShadow: \"1px 1px 2px #000000\" }}>Currently Staked</p></h5>\r\n                              <div className=\"card-bottom d-flex justify-content-between\">\r\n                                <input key={i} type=\"hidden\" id='stakeid' value={nft.tokenId} />\r\n                                <Button style={{ marginLeft: '2px', backgroundColor: \"#ffffff10\" }} onClick={unstakeit}>Unstake it</Button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        </div>\r\n                      )})}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    ","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Nft from './nft';\r\n\r\n<Routes>\r\n<Route path=\"/nft\" element={<Nft />} />\r\n</Routes>\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  \r\n  <React.StrictMode>\r\n    <App />\r\n    <Nft />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}